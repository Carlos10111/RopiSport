{"version":3,"file":"ngxtension-inject-local-storage.mjs","sources":["../../../../libs/ngxtension/inject-local-storage/src/inject-local-storage.ts","../../../../libs/ngxtension/inject-local-storage/src/ngxtension-inject-local-storage.ts"],"sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport {\n\tDestroyRef,\n\tInjectionToken,\n\tinject,\n\tsignal,\n\ttype Injector,\n\ttype WritableSignal,\n} from '@angular/core';\nimport { assertInjector } from 'ngxtension/assert-injector';\n\nexport const NGXTENSION_LOCAL_STORAGE = new InjectionToken(\n\t'NGXTENSION_LOCAL_STORAGE',\n\t{\n\t\tprovidedIn: 'root',\n\t\tfactory: () => localStorage, // this would be the default\n\t},\n);\n\nexport function provideLocalStorageImpl(impl: typeof globalThis.localStorage) {\n\treturn {\n\t\tprovide: NGXTENSION_LOCAL_STORAGE,\n\t\tuseValue: impl,\n\t};\n}\n\n/**\n * Options to override the default behavior of the local storage signal.\n */\nexport type LocalStorageOptionsNoDefault = {\n\t/**\n\t *\n\t * Determines if local storage syncs with the signal.\n\t * When true, updates in one tab reflect in others, ideal for shared-state apps.\n\t * Defaults to true.\n\t */\n\tstorageSync?: boolean;\n\t/**\n\t * Override the default JSON.stringify function for custom serialization.\n\t * @param value\n\t */\n\tstringify?: (value: unknown) => string;\n\t/**\n\t * Override the default JSON.parse function for custom deserialization.\n\t * @param value\n\t */\n\tparse?: (value: string) => unknown;\n\n\t/**\n\t * Injector for the Injection Context\n\t */\n\tinjector?: Injector;\n};\n\nexport type LocalStorageOptionsWithDefaultValue<T> =\n\tLocalStorageOptionsNoDefault & {\n\t\t/**\n\t\t * Default value for the signal.\n\t\t * Can be a value or a function that returns the value.\n\t\t */\n\t\tdefaultValue: T | (() => T);\n\t};\n\nexport type LocalStorageOptions<T> =\n\t| LocalStorageOptionsNoDefault\n\t| LocalStorageOptionsWithDefaultValue<T>;\n\nfunction isLocalStorageWithDefaultValue<T>(\n\toptions: LocalStorageOptions<T>,\n): options is LocalStorageOptionsWithDefaultValue<T> {\n\treturn 'defaultValue' in options;\n}\n\nfunction isFunction(value: unknown): value is (...args: unknown[]) => unknown {\n\treturn typeof value === 'function';\n}\n\nfunction goodTry<T>(tryFn: () => T, defaultValue: T): T {\n\ttry {\n\t\treturn tryFn();\n\t} catch {\n\t\treturn defaultValue;\n\t}\n}\n\nfunction parseJSON(value: string): unknown {\n\treturn value === 'undefined' ? undefined : JSON.parse(value);\n}\n\nexport const injectLocalStorage: {\n\t<T>(\n\t\tkey: string,\n\t\toptions: LocalStorageOptionsWithDefaultValue<T>,\n\t): WritableSignal<T>;\n\t<T>(\n\t\tkey: string,\n\t\toptions?: LocalStorageOptionsNoDefault,\n\t): WritableSignal<T | undefined>;\n} = <T>(\n\tkey: string,\n\toptions: LocalStorageOptions<T> = {},\n): WritableSignal<T | undefined> => {\n\tif (isLocalStorageWithDefaultValue(options)) {\n\t\tconst defaultValue = isFunction(options.defaultValue)\n\t\t\t? options.defaultValue()\n\t\t\t: options.defaultValue;\n\n\t\treturn internalInjectLocalStorage<T>(key, options, defaultValue);\n\t}\n\treturn internalInjectLocalStorage<T | undefined>(key, options, undefined);\n};\n\nconst internalInjectLocalStorage = <R>(\n\tkey: string,\n\toptions: LocalStorageOptions<R>,\n\tdefaultValue: R,\n): WritableSignal<R> => {\n\tconst stringify = isFunction(options.stringify)\n\t\t? options.stringify\n\t\t: JSON.stringify;\n\tconst parse = isFunction(options.parse) ? options.parse : parseJSON;\n\tconst storageSync = options.storageSync ?? true;\n\treturn assertInjector(injectLocalStorage, options.injector, () => {\n\t\tconst localStorage = inject(NGXTENSION_LOCAL_STORAGE);\n\t\tconst destroyRef = inject(DestroyRef);\n\t\tconst window = inject(DOCUMENT).defaultView;\n\n\t\tif (!window) {\n\t\t\tthrow new Error('Cannot access to window element');\n\t\t}\n\n\t\tconst initialStoredValue = goodTry(() => localStorage.getItem(key), null);\n\t\tconst internalSignal = signal<R>(\n\t\t\tinitialStoredValue\n\t\t\t\t? goodTry(() => parse(initialStoredValue) as R, defaultValue)\n\t\t\t\t: defaultValue,\n\t\t);\n\n\t\tconst syncValueWithLocalStorage = (value: R): void => {\n\t\t\tconst newValue = goodTry(\n\t\t\t\t() => (value === undefined ? null : stringify(value)),\n\t\t\t\tnull,\n\t\t\t);\n\n\t\t\ttry {\n\t\t\t\tif (newValue === localStorage.getItem(key)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (newValue === null) {\n\t\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t\t} else {\n\t\t\t\t\tlocalStorage.setItem(key, newValue);\n\t\t\t\t}\n\n\t\t\t\t// We notify other consumers in this tab about changing the value in the store for synchronization\n\t\t\t\twindow.dispatchEvent(\n\t\t\t\t\tnew StorageEvent(`storage`, {\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tnewValue,\n\t\t\t\t\t\tstorageArea: localStorage,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t} catch {\n\t\t\t\t// ignore errors\n\t\t\t}\n\t\t};\n\n\t\tif (storageSync) {\n\t\t\tconst originalSet = internalSignal.set;\n\t\t\tconst originalUpdate = internalSignal.update;\n\n\t\t\tconst set: typeof originalSet = (newValue: R) => {\n\t\t\t\t// set the value in the signal using the original set function\n\t\t\t\toriginalSet(newValue);\n\n\t\t\t\t// then we refresh the value in localStorage and notify other consumers in this tab about the change\n\t\t\t\tsyncValueWithLocalStorage(newValue);\n\t\t\t};\n\n\t\t\tconst update: typeof originalUpdate = (updateFn: (value: R) => R) => {\n\t\t\t\tlet newValue: R;\n\n\t\t\t\t// set the value in the signal using the original set function\n\t\t\t\toriginalUpdate((value) => (newValue = updateFn(value)));\n\n\t\t\t\t// then we refresh the value in localStorage and notify other consumers in this tab about the change\n\t\t\t\tsyncValueWithLocalStorage(newValue!);\n\t\t\t};\n\n\t\t\tinternalSignal.set = set;\n\t\t\tinternalSignal.update = update;\n\n\t\t\tconst onStorage = (event: StorageEvent) => {\n\t\t\t\tif (event.storageArea === localStorage && event.key === key) {\n\t\t\t\t\tconst newValue =\n\t\t\t\t\t\tevent.newValue !== null\n\t\t\t\t\t\t\t? (parse(event.newValue) as R)\n\t\t\t\t\t\t\t: defaultValue;\n\t\t\t\t\tinternalSignal.set(newValue);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\twindow.addEventListener('storage', onStorage);\n\t\t\tdestroyRef.onDestroy(() => {\n\t\t\t\twindow.removeEventListener('storage', onStorage);\n\t\t\t});\n\t\t}\n\n\t\treturn internalSignal;\n\t});\n};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}