package com.ropisport.gestion.model.entity;

import com.ropisport.gestion.model.audit.Auditable;
import com.ropisport.gestion.model.enums.EstadoPago;
import com.ropisport.gestion.model.enums.MetodoPago;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import lombok.*;
@Entity
@Table(name = "pagos")
@Data
@EqualsAndHashCode(callSuper = true) 

@NoArgsConstructor
@AllArgsConstructor
public class Pago extends Auditable{
    
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "socia_id", nullable = false)
    private Socia socia;
    
    @Column(name = "monto", nullable = false, precision = 10, scale = 2)
    private BigDecimal monto;
    
    @Column(name = "fecha_pago", nullable = false)
    private LocalDateTime fechaPago;
    
    @Column(name = "concepto")
    private String concepto;
    
    @Column(name = "metodo_pago")
    @Enumerated(EnumType.STRING)
    private MetodoPago metodoPago;
    
    @Column(name = "confirmado")
    private Boolean confirmado;
    
    @OneToMany(mappedBy = "pago", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<PagoDetalle> detalles = new ArrayList<>();
    
    // Método helper para agregar detalles
    public void addDetalle(PagoDetalle detalle) {
        detalles.add(detalle);
        detalle.setPago(this);
    }
    
    // Método helper para remover detalles
    public void removeDetalle(PagoDetalle detalle) {
        detalles.remove(detalle);
        detalle.setPago(null);
    }
}