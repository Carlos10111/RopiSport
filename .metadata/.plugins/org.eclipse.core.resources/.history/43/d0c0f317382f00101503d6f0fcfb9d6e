package com.ropisport.gestion.service.impl;

import com.ropisport.gestion.exception.EntityNotFoundException;
import com.ropisport.gestion.model.dto.request.PagoDetalleRequest;
import com.ropisport.gestion.model.dto.response.PagoDetalleResponse;
import com.ropisport.gestion.model.entity.Pago;
import com.ropisport.gestion.model.entity.PagoDetalle;
import com.ropisport.gestion.repository.PagoDetalleRepository;
import com.ropisport.gestion.repository.PagoRepository;
import com.ropisport.gestion.service.PagoDetalleService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.time.LocalDateTime;
import java.util.List;
import java.util.stream.Collectors;

@Service
public class PagoDetalleServiceImpl implements PagoDetalleService {

    @Autowired
    private PagoDetalleRepository pagoDetalleRepository;
    
    @Autowired
    private PagoRepository pagoRepository;

    @Override
    @Transactional(readOnly = true)
    public List<PagoDetalleResponse> getDetallesByPagoId(Integer pagoId) {
        return pagoDetalleRepository.findByPagoId(pagoId).stream()
                .map(this::mapToResponse)
                .collect(Collectors.toList());
    }

    @Override
    @Transactional(readOnly = true)
    public PagoDetalleResponse getDetalleById(Integer id) {
        PagoDetalle detalle = pagoDetalleRepository.findById(id)
                .orElseThrow(() -> new EntityNotFoundException("Detalle de pago no encontrado con ID: " + id));
        return mapToResponse(detalle);
    }

    @Override
    @Transactional
    public PagoDetalleResponse createDet